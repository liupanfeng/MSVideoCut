plugins {
    id 'com.android.application'
}

println("lpf ---> app build.gradle")

def androidID=rootProject.ext.androidID
android {
    compileSdkVersion androidID.compileSdkVersion
    buildToolsVersion androidID.buildToolsVersion

    defaultConfig {
        applicationId appID.app
        minSdk androidID.minSdkVersion
        targetSdk androidID.targetSdkVersion
        versionCode androidID.versionCode
        versionName androidID.versionName

        testInstrumentationRunner androidID.testInstrumentationRunner
        externalNativeBuild {
            cmake {
                cppFlags ''
            }
        }

        //将build.gradle中的配置 让java层使用
        buildConfigField("boolean","isRelease",String.valueOf(isRelease))
    }

    buildTypes {
        debug {
            buildConfigField("String", "debug", "\"${url.debug}\"")
        }

        release {
            buildConfigField("String","release","\"${url.release} \"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    dependenciesBase.forEach{k,v->
        implementation(v)
    }

    if (isRelease){
        implementation project(":moduleCapture")
        implementation project(":modulevideoedit")
    }

    implementation project(":libBase")
    implementation project(":libCommon")

}